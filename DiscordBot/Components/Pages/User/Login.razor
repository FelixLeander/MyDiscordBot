@page "/Login"
@page "/User/oAuth/Discord"
@rendermode InteractiveServer
@inject LoginService LoginService
@inject NavigationManager NavigationManager
@using System.Web
@using DiscordBot.Business.Helpers.Blazor
@using Serilog

<b>If you don't get redirected after a few seconds, click the link below.</b>
<a href="@LoginService.DiscordAuthUrl">Click here to retry login.</a>

@code
{
    [SupplyParameterFromQuery(Name = "code")]
    private string? DiscordOAuthCode { get; set; }

    [SupplyParameterFromQuery(Name = "state")]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (DiscordOAuthCode != null)
            await LoginService.LoginUserAsync(DiscordOAuthCode);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (ReturnUrl != null)
        {
            NavigationManager.NavigateTo(ReturnUrl);
            return;
        }

        if (LoginService.UserIsLoggedIn)
            return;

        if (DiscordOAuthCode == null)
        {
            var returnUrl = HttpUtility.ParseQueryString(new Uri(NavigationManager.Uri).Query).Get("ReturnUrl");
            NavigationManager.NavigateTo(returnUrl == null ? LoginService.DiscordAuthUrl : $"{LoginService.DiscordAuthUrl}&state={returnUrl}");
            return;
        }

        Log.Error("HOW DID U LAND HERE?!");
    }
}
