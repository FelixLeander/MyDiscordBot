@page "/User/Login"
@page "/User/oAuth/Discord"
@rendermode InteractiveServer
@inject LoginService LoginService
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor
@using DiscordBot.Business.Helpers.Blazor
@using DiscordBot.Business.Services

<h1>Login-Page</h1>
<div>
    @if (HttpContextAccessor.HttpContext?.User.Identity?.IsAuthenticated ?? false)
    {
        <p>Welcome, <b>@HttpContextAccessor.HttpContext.User.Identity.Name</b></p>
        <button @onclick="LogoutUserAsync">Logout</button>
    }
    else
    {
        <a href="@_authUrl">Login with Discord</a>
    }
</div>

@code
{
    private static string? _authUrl;

    private async Task LogoutUserAsync() => await LoginService.LogoutUserAsync();

    protected override Task OnInitializedAsync()
    {
        _authUrl ??= LoginService.GetDiscordAuthUrl();
        return Task.CompletedTask;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (await LoginService.LoginUserAsync()) // TODO: Always errors here if no code...
            NavigationManager.NavigateTo(RouteHelper.Home);
    }
}
